name: "Run Container Scan on Super Mario Docker Image with Quality Gate"

on:
  push:
    branches: [ main ]

jobs:
  trivy-image-scan:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Read version.txt AFTER checkout and expose it as env
      - name: Read version
        id: ver
        run: |
          v=$(tr -d '\r' < version.txt)
          echo "VERSION=$v" >> "$GITHUB_ENV"

      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      # (Optional) Pull to validate that the tag exists; Trivy can pull on its own too.
      - name: Validate image exists
        run: docker pull docker.io/monicamarshall/supermariogitopsproject:${{ env.VERSION }}

      - name: Trivy image scan (remote image)
        uses: aquasecurity/trivy-action@0.24.0  # pin a released version
        with:
          image-ref: docker.io/monicamarshall/supermariogitopsproject:${{ env.VERSION }}
          vuln-type: 'os,library'
          ignore-unfixed: true
          severity: 'CRITICAL,HIGH'
          exit-code: '1'         # fail job on findings
          format: 'sarif'
          output: 'trivy.sarif'

      - name: Upload SARIF to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: trivy.sarif
